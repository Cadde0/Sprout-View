{"ast":null,"code":"var _jsxFileName = \"/Users/oscarcaddeo/Code/KTH/Sprout-View/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport strawberryImage from './Strawberry transparent.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ({\n  onConfirmPlanting\n}) => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(String);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleImageClick = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  const handleConfirmPlantingClick = () => {\n    setModalOpen(false);\n    onConfirmPlanting(); // Call the function passed from the parent component (Root)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"logo\",\n      children: \"Sprout View \\uD83E\\uDEB4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBarContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          type: \"text\",\n          placeholder: \"Search plants...\",\n          onChange: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"plantImage\",\n          src: strawberryImage,\n          alt: \"Strawberry\",\n          onClick: handleImageClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleCloseModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Are you sure you want to plant a Strawberry?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmPlantingClick,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9Ma7iONEh82OgzzppvlZft8mRjk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","strawberryImage","jsxDEV","_jsxDEV","App","onConfirmPlanting","_s","modalOpen","setModalOpen","searchQuery","setSearchQuery","String","handleSearch","query","handleImageClick","handleCloseModal","handleConfirmPlantingClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/oscarcaddeo/Code/KTH/Sprout-View/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport strawberryImage from './Strawberry transparent.png';\n\nconst App = ({ onConfirmPlanting }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(String);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query)\n  }\n\n  const handleImageClick = () => {\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleConfirmPlantingClick = () => {\n    setModalOpen(false);\n    onConfirmPlanting(); // Call the function passed from the parent component (Root)\n  };\n\n  return (\n    <div>\n      <header className=\"logo\">\n        Sprout View ðŸª´    \n      </header>\n      <main>\n        <div className=\"searchBarContainer\">\n          <input\n            className=\"searchBar\"\n            type=\"text\"\n            placeholder=\"Search plants...\"\n            onChange={() => {}}\n          />\n        </div>\n        <div className=\"imageContainer\">\n          <img \n            className=\"plantImage\" \n            src={strawberryImage} \n            alt=\"Strawberry\"\n            onClick={handleImageClick}\n          />\n        </div>\n        {modalOpen && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <span className=\"close\" onClick={handleCloseModal}>&times;</span>\n              <h2>Are you sure you want to plant a Strawberry?</h2>\n              <button onClick={handleConfirmPlantingClick}>Yes</button>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,GAAG,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACW,MAAM,CAAC;EAEtD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BH,cAAc,CAACG,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMQ,0BAA0B,GAAGA,CAAA,KAAM;IACvCR,YAAY,CAAC,KAAK,CAAC;IACnBH,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEF,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQe,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAEzB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAKe,SAAS,EAAC,oBAAoB;QAAAD,QAAA,eACjCd,OAAA;UACEe,SAAS,EAAC,WAAW;UACrBK,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kBAAkB;UAC9BC,QAAQ,EAAEA,CAAA,KAAM,CAAC;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA;QAAKe,SAAS,EAAC,gBAAgB;QAAAD,QAAA,eAC7Bd,OAAA;UACEe,SAAS,EAAC,YAAY;UACtBQ,GAAG,EAAEzB,eAAgB;UACrB0B,GAAG,EAAC,YAAY;UAChBC,OAAO,EAAEd;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACLf,SAAS,iBACRJ,OAAA;QAAKe,SAAS,EAAC,OAAO;QAAAD,QAAA,eACpBd,OAAA;UAAKe,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC5Bd,OAAA;YAAMe,SAAS,EAAC,OAAO;YAACU,OAAO,EAAEb,gBAAiB;YAAAE,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjEnB,OAAA;YAAAc,QAAA,EAAI;UAA4C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrDnB,OAAA;YAAQyB,OAAO,EAAEZ,0BAA2B;YAAAC,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvDIF,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}